{"version":3,"file":"component---src-templates-blog-post-js-1bf90b275930fbf6f9cb.js","mappings":"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","sources":["webpack://MyGatsby/./src/templates/blog-post.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport commonUtils from '../utils/common'\nimport Layout from '../components/Layout/Layout'\nimport SEO from '../components/SEO/seo'\nimport Gitalk from 'gitalk'\nimport _ from 'lodash'\nimport './blog-post.less'\nimport 'gitalk/dist/gitalk.css'\n\nclass BlogPostTemplate extends React.Component {\n\n  componentDidMount() {\n    // 集成gitalk\n    const title = _.get(this.props, 'data.markdownRemark.frontmatter.title');\n    const option = _.get(this.props, 'data.allGitalkJson.edges[0].node');\n    const id = location.pathname;\n    if (location.host.indexOf('localhost') === -1) { // 本地开发避免创建issue\n      const gitalk = new Gitalk(Object.assign(option, {\n        id,\n        title,\n        distractionFreeMode: false\n      }));\n      gitalk.render('gitalk-container');\n    }\n  }\n\n  render() {\n    const { data = {}, location = {}, pageContext } = this.props;\n\n    const { site = {}, markdownRemark = {}, allNavigationJson = {} } = data;\n    const { pathname = '' } = location;\n    const { previous, next } = pageContext;\n\n    const { siteMetadata } = site;\n    const { html = '', excerpt, frontmatter = {} } = markdownRemark;\n    const { edges: navs = [] } = allNavigationJson;\n\n    const { title, date, tags, category, draft } = frontmatter;\n\n    // 得到相对路径\n    const reg = new RegExp(`^${__PATH_PREFIX__}`);\n    const rePathname = pathname.replace(reg, '');\n\n    // 处理前言\n    let excerptHTML = '', postHTML = html;\n    if (html.indexOf('<!-- more -->') !== -1) {\n      excerptHTML = `<blockquote>${html.split('<!-- more -->')[0]}</blockquote>`;\n      postHTML = html.split('<!-- more -->')[1];\n    }\n\n    return (\n      <Layout pathname={rePathname} metadata={siteMetadata} navs={navs}>\n        <SEO title={title} description={excerpt} />\n        <div className=\"blog-header\">\n          <div className=\"blog-title\">{title}</div>\n          <div className=\"blog-info\">\n            <div className=\"blog-category\">Under <Link to={`/cats/${category ? commonUtils.getHash(category) : 'uncat'}/`}>{category || '未分类'}</Link></div>\n            <div className=\"blog-date\">On {date}</div>\n            {draft && <div className=\"blog-draft\">草稿</div>}\n          </div>\n          <div className=\"blog-info\">\n            <div className=\"blog-tags\">\n                {tags && tags.map((tag, index) => {\n                return (\n                  <div className=\"blog-tag\" key={`${tag}-${index}`}>\n                    <Link to={`/tags/${commonUtils.getHash(tag)}/`}>{tag}</Link>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n        <div className=\"blog-content page-content\">\n          {excerptHTML && <div className=\"blog-excerpt\" dangerouslySetInnerHTML={{ __html: excerptHTML }} />}\n          <div className=\"blog-post\" dangerouslySetInnerHTML={{ __html: postHTML }} />\n          <div className=\"blog-over\">\n            <span className=\"over-l\"></span>\n            <span className=\"over-m\">OVER</span>\n            <span className=\"over-r\"></span>\n          </div>\n          <div className=\"blog-footer\">\n            <div className=\"prev-post\">\n              {previous && (\n                <div>\n                  <span>上一篇：</span>\n                  <Link to={`/pages/${commonUtils.getHash(previous.fields.slug)}`} rel=\"prev\">\n                    {previous.frontmatter.title}\n                  </Link>\n                </div>\n              )}\n            </div>\n            <div className=\"next-post\">\n              {next && (\n                <div>\n                  <span>下一篇：</span>\n                  <Link to={`/pages/${commonUtils.getHash(next.fields.slug)}`} rel=\"next\">\n                    {next.frontmatter.title}\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n          <div id=\"gitalk-container\"></div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date\n        tags\n        category\n        draft\n      }\n    }\n    allNavigationJson {\n      edges {\n        node {\n          name\n          link\n        }\n      }\n    }\n    allGitalkJson {\n      edges {\n        node {\n          clientID\n          clientSecret\n          repo\n          owner\n          admin\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogPostTemplate","componentDidMount","title","this","props","option","id","location","pathname","host","indexOf","Gitalk","Object","assign","distractionFreeMode","render","data","pageContext","site","markdownRemark","allNavigationJson","previous","next","siteMetadata","html","excerpt","frontmatter","edges","navs","date","tags","category","draft","reg","RegExp","rePathname","replace","excerptHTML","postHTML","split","metadata","description","className","Link","to","commonUtils","map","tag","index","key","dangerouslySetInnerHTML","__html","fields","slug","rel","React"],"sourceRoot":""}