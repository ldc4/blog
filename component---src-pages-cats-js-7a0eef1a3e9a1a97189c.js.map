{"version":3,"file":"component---src-pages-cats-js-7a0eef1a3e9a1a97189c.js","mappings":"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","sources":["webpack://ldc4-blog/./src/pages/cats.js","webpack://ldc4-blog/./node_modules/lodash/_baseFindIndex.js","webpack://ldc4-blog/./node_modules/lodash/_baseTrim.js","webpack://ldc4-blog/./node_modules/lodash/_trimmedEndIndex.js","webpack://ldc4-blog/./node_modules/lodash/findIndex.js","webpack://ldc4-blog/./node_modules/lodash/toFinite.js","webpack://ldc4-blog/./node_modules/lodash/toInteger.js","webpack://ldc4-blog/./node_modules/lodash/toNumber.js"],"sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { findIndex } from 'lodash';\nimport commonUtils from '../utils/common'\n\nimport Layout from '../components/Layout/Layout';\nimport SEO from '../components/SEO/seo';\nimport './cats.less';\n\nclass CatsPage extends React.Component {\n\n  getCatsHTML(cats) {\n    let catsHTML = [];\n    cats.forEach((cat, index) => {\n      catsHTML.push((\n        <div className=\"cat\" key={`col-${index}`}>\n          <Link to={`/cats/${cat.catLink}`}>\n            <div className=\"cat-value\">{cat.catValue}</div>\n            <div className=\"cat-count\">{cat.catCount}</div>\n          </Link>\n        </div>\n      ));\n    });\n    return <div className=\"cats-wrap page-content\">{catsHTML}</div>\n  }\n\n  render() {\n    const { data = {}, location = {} } = this.props;\n\n    const { site = {}, allMarkdownRemark = {}, allNavigationJson = {} } = data;\n    const { pathname = '' } = location;\n\n    const { siteMetadata } = site;\n    const { edges: cats } = allMarkdownRemark;\n    const { edges: navs } = allNavigationJson;\n\n    // 得到相对路径\n    const reg = new RegExp(`^${__PATH_PREFIX__}`);\n    const rePathname = pathname.replace(reg, '');\n\n    return (\n      <Layout pathname={rePathname} metadata={siteMetadata} navs={navs}>\n        <SEO\n          title=\"All cats\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {this.getCatsHTML(dealWithCats(cats))}\n      </Layout>\n    )\n  }\n}\n\n\nexport default CatsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            category\n            draft\n          }\n        }\n      }\n    }\n    allNavigationJson {\n      edges {\n        node {\n          name\n          link\n        }\n      }\n    }\n  }\n`\n/**\n将graphql查询的结果进行处理\n原数据结果：\n[\n  {\n    \"node\": {\n      \"frontmatter\": {\n        \"category\": \"xxx\"\n      }\n    }\n  }\n]\n处理为：\n[\n  {\n    \"catValue\": \"xxx\",\n    \"catLink\": \"xxx\",\n    \"catCount\": 1\n  }\n]\n另外，进行一些边界处理\n*/\nfunction dealWithCats(arr) {\n  // 将多个tag先拆分出来\n  const result = [];\n  let noCatCount = 0; // 统计没有cat的个数\n  arr.forEach((item) => {\n    const { category, draft } = item.node.frontmatter;\n    if (draft) return;  // 屏蔽草稿\n    if (category) {\n      const index = findIndex(result, (node) => (node.catValue === category));\n        if (index >= 0) {\n          result[index]['catCount']++;\n        } else {\n          result.push({\n            catValue: category,\n            catLink: commonUtils.getHash(category),\n            catCount: 1,\n          })\n        }\n    } else {\n      noCatCount++;\n    }\n  });\n  if (noCatCount > 0) {\n    result.push({\n      catValue: '未分类',\n      catLink: 'uncat',\n      catCount: noCatCount,\n    });\n  }\n  return result;\n}","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["CatsPage","getCatsHTML","cats","catsHTML","forEach","cat","index","push","className","key","Link","to","catLink","catValue","catCount","render","this","props","data","location","site","allMarkdownRemark","allNavigationJson","pathname","siteMetadata","edges","navs","reg","RegExp","rePathname","replace","metadata","title","keywords","arr","result","noCatCount","item","node","frontmatter","category","draft","commonUtils","dealWithCats","React","module","exports","array","predicate","fromIndex","fromRight","length","trimmedEndIndex","reTrimStart","string","slice","reWhitespace","test","charAt","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","toNumber","INFINITY","value","toFinite","remainder","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}